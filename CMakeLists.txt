CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

PROJECT(ClosestPoint)

SET(CMAKE_CXX_STANDARD 17)

FIND_PACKAGE(Boost COMPONENTS program_options unit_test_framework REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/libs/eigen)

INCLUDE(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-march=native" COMPILER_SUPPORTS_MARCH_NATIVE)
IF(COMPILER_SUPPORTS_MARCH_NATIVE)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
ENDIF()

ADD_EXECUTABLE(randomQueries
    src/randomQueries.cpp
    src/ProgramOptions.cpp
)
TARGET_LINK_LIBRARIES(randomQueries
    ${Boost_LIBRARIES}
)

ADD_EXECUTABLE(query
    src/query.cpp
    src/ProgramOptions.cpp
)
TARGET_LINK_LIBRARIES(query
    ${Boost_LIBRARIES}
)

IF(UNIX)
  ADD_CUSTOM_TARGET(shapeSymLink ALL
    COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_SOURCE_DIR}/shapes ${CMAKE_BINARY_DIR}/shapes)
ENDIF(UNIX)

IF(WIN32)
  FILE(COPY ${CMAKE_SOURCE_DIR}/shapes DESTINATION ${CMAKE_BINARY_DIR})
ENDIF(WIN32)

ENABLE_TESTING()
ADD_SUBDIRECTORY(tests)

OPTION(BUILD_DOC "Build documentation" ON)
FIND_PACKAGE(Doxygen)
IF(DOXYGEN_FOUND)
  IF(BUILD_DOC)
    SET(DOXYGEN_IN ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in)
    SET(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile.in)
    CONFIGURE_FILE(${DOXYGEN_IN} ${DOXYGEN_OUT} @ONLY)
    ADD_CUSTOM_TARGET(doc
      COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_OUT}
      WORKING_DIRECTORY ${CMAKE_CURRENT_BINDARY_DIR}
      COMMENT "Generate the documentation using Doxygen"
      VERBATIM
    )
  ENDIF(BUILD_DOC)
ELSE(DOXYGEN_FOUND)
  MESSAGE("You need doxygen to generate the documentation of this project")
ENDIF(DOXYGEN_FOUND)
